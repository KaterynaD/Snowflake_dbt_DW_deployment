name: QA Deployment and Test PROD Deployment

on:
  push:
    branches:
      - QA

jobs:
  deploy_schema_and_dbt:
    runs-on: ubuntu-latest

    env: # only these are needed for this first workflow
      FLYWAY_VERSION: 10.17.0
      SNOW_ACCOUNT: ${{ secrets.QA_SNOWFLAKE_ACCOUNT }}   
      SNOW_WH: ${{ secrets.QA_SNOWFLAKE_WAREHOUSE }} 
      SNOW_DB: ${{ secrets.QA_SNOWFLAKE_DB }} 
      SNOW_SCHEMA: ${{ secrets.QA_SNOWFLAKE_SCHEMA }}
      SNOW_USER: ${{ secrets.QA_SNOWFLAKE_USERNAME }}    
      SNOW_PWD: ${{ secrets.QA_SNOWFLAKE_PASSWORD }}
      SNOW_ROLE: ${{ secrets.QA_SNOWFLAKE_ROLE }}

      PROD_SNOW_ACCOUNT: ${{ secrets.PROD_SNOWFLAKE_ACCOUNT }}   
      PROD_SNOW_WH: ${{ secrets.PROD_SNOWFLAKE_WAREHOUSE }} 
      PROD_SNOW_DB: ${{ secrets.PROD_SNOWFLAKE_DB }} 
      PROD_SNOW_SCHEMA: ${{ secrets.PROD_SNOWFLAKE_SCHEMA }}
      PROD_SNOW_USER: ${{ secrets.PROD_SNOWFLAKE_USERNAME }}    
      PROD_SNOW_PWD: ${{ secrets.PROD_SNOWFLAKE_PASSWORD }}
      PROD_SNOW_ROLE: ${{ secrets.PROD_SNOWFLAKE_ROLE }}
    
    if: github.ref == 'refs/heads/QA'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Flyway
        run: |
          wget -qO- https://download.red-gate.com/maven/release/org/flywaydb/enterprise/flyway-commandline/${{ env.FLYWAY_VERSION }}/flyway-commandline-${{ env.FLYWAY_VERSION }}-linux-x64.tar.gz | tar -xvz && sudo ln -s `pwd`/flyway-${{ env.FLYWAY_VERSION }}/flyway /usr/local/bin      

      - name: QA Run Flyway Migrations
        env:
         FLYWAY_URL: jdbc:snowflake://${{ env.SNOW_ACCOUNT }}.snowflakecomputing.com/?db=${{ env.SNOW_DB }}&warehouse=${{ env.SNOW_WH }}&jdbc_query_result_format=json
         FLYWAY_USER: ${{ env.SNOW_USER }}
         FLYWAY_PASSWORD: ${{ env.SNOW_PWD }}
         FLYWAY_DEFAULT_SCHEMA: ${{ env.SNOW_SCHEMA }}
         FLYWAY_LOCATIONS: filesystem:./sql_DW_SPINN
        run: |
         flyway migrate          

      - name: QA Flyway info and write result to file
        env:
         FLYWAY_URL: jdbc:snowflake://${{ env.SNOW_ACCOUNT }}.snowflakecomputing.com/?db=${{ env.SNOW_DB }}&warehouse=${{ env.SNOW_WH }}&jdbc_query_result_format=json
         FLYWAY_USER: ${{ env.SNOW_USER }}
         FLYWAY_PASSWORD: ${{ env.SNOW_PWD }}
         FLYWAY_DEFAULT_SCHEMA: ${{ env.SNOW_SCHEMA }}
         FLYWAY_LOCATIONS: filesystem:./sql_DW_SPINN      
        run: |
         flyway info > ./migration_status_DW_SPINN/$(date -u +"%Y-%m-%d|%H:%M:%S")-${{ env.SNOW_DB }}-${{ env.SNOW_SCHEMA }}.txt          

      - name: QA Commit changes
        uses: EndBug/add-and-commit@v9
        with:
         add: './migration_status_DW_SPINN/*-${{ env.SNOW_DB }}-${{ env.SNOW_SCHEMA }}.txt'  

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.12
          
      - name: Install DBT and Snowflake adapter
        run: |
          pip install dbt-core dbt-snowflake                

      - name: Set up dbt profile
        run: |
          mkdir -p ~/.dbt
          echo "
          dbt_DW_SPINN:
            outputs:
              dev:
                account:  $SNOW_ACCOUNT
                database: $SNOW_DB
                password: $SNOW_PWD
                role: $SNOW_ROLE
                schema: $SNOW_SCHEMA
                threads: 1
                type: snowflake
                user: $SNOW_USER
                warehouse: $SNOW_WH
            target: dev
          " > ~/.dbt/profiles.yml
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.QA_SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.QA_SNOWFLAKE_USERNAME }}
          SNOWFLAKE_PASSWORD: ${{ secrets.QA_SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: $SNOW_ROLE
          SNOWFLAKE_DATABASE: ${{ secrets.QA_SNOWFLAKE_DATABASE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.QA_SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.QA_SNOWFLAKE_SCHEMA }}

      - name: QA DBT deps
        working-directory: ./dbt_DW_SPINN
        run: dbt deps                    

      - name: QA DBT run
        working-directory: ./dbt_DW_SPINN      
        run: dbt run  

      - name: QA DBT test
        working-directory: ./dbt_DW_SPINN      
        run: dbt test          

      - name: PROD Run Flyway Migrations
        env:
         FLYWAY_URL: jdbc:snowflake://${{ env.PROD_SNOW_ACCOUNT }}.snowflakecomputing.com/?db=${{ env.PROD_SNOW_DB }}&warehouse=${{ env.PROD_SNOW_WH }}&jdbc_query_result_format=json
         FLYWAY_USER: ${{ env.PROD_SNOW_USER }}
         FLYWAY_PASSWORD: ${{ env.PROD_SNOW_PWD }}
         FLYWAY_DEFAULT_SCHEMA: ${{ env.PROD_SNOW_SCHEMA }}
         FLYWAY_LOCATIONS: filesystem:./sql_DW_SPINN
        run: |
          flyway migrate           
           
      - name: PROD Flyway info and write result to file
        env:
         FLYWAY_URL: jdbc:snowflake://${{ env.PROD_SNOW_ACCOUNT }}.snowflakecomputing.com/?db=${{ env.PROD_SNOW_DB }}&warehouse=${{ env.PROD_SNOW_WH }}&jdbc_query_result_format=json
         FLYWAY_USER: ${{ env.PROD_SNOW_USER }}
         FLYWAY_PASSWORD: ${{ env.PROD_SNOW_PWD }}
         FLYWAY_DEFAULT_SCHEMA: ${{ env.PROD_SNOW_SCHEMA }}
         FLYWAY_LOCATIONS: filesystem:./sql_DW_SPINN
        run: |
         flyway info > ./migration_status_DW_SPINN/$(date -u +"%Y-%m-%d|%H:%M:%S")-${{ env.PROD_SNOW_DB }}-${{ env.PROD_SNOW_SCHEMA }}.txt          
    
      - name: PROD Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          add: './migration_status_DW_SPINN/*-${{ env.PROD_SNOW_DB }}-${{ env.PROD_SNOW_SCHEMA }}.txt'     
          
      - name: Set Git config
        run: |
         git config --local user.email "drogaieva@gmail.com"
         git config --local user.name "KaterynaD"
  
      - name: Merge QA to PROD
        run: |
         git fetch --unshallow
         git checkout PROD
         git pull
         git merge --no-ff QA -m "Auto-merge QA to PROD - $(date -u +"%Y-%m-%d|%H:%M:%S")"
         git push           